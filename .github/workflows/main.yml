name: deploy
on:
  push:
    branches:
      - master
jobs:
  sonar-gate:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Add maven settings for GitHub packages
        uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: '[{"id": "github", "username": "${{secrets.SSH_USERNAME}}", "password": "${{secrets.SSH_GITHUB_TOKEN}}"}]'

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=twentyfively-api-layer -Dsonar.projectName='twentyfively-api-layer'

  build-and-deploy:
    #if: ${{ false }} # this record is to be used to disable the deploy job and use only the sonar-gate job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.9.0
        with:
          distribution: 'adopt'
          java-version: '17'

      - uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: '[{"id": "github", "username": "${{secrets.SSH_USERNAME}}", "password": "${{secrets.SSH_GITHUB_TOKEN}}"}]'

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots clean package -DskipTests

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }}  >> ~/.ssh/known_hosts

      - name: Create dist_tomcat folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ..
            mkdir -p actions
            cd actions
            mkdir -p dist_tomcat
            cd dist_tomcat
            mkdir -p ${{ secrets.SSH_PROJECT_NAME }}
            cd ${{ secrets.SSH_PROJECT_NAME }}

      - name: Move build to server with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./target/${{ secrets.SSH_PROJECT_NAME }}.war ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/actions/dist_tomcat/${{ secrets.SSH_PROJECT_NAME }}

      - name: Move data inside Tomcat Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /actions/dist_tomcat/${{ secrets.SSH_PROJECT_NAME }}
            docker cp ./ ${{ secrets.SSH_CONTAINER }}:/usr/local/tomcat/webapps


